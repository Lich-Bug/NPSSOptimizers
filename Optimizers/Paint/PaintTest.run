#include "Paint.int"

Aircraft AC
{
	AC.THRUST = 50000;
	AC.SW = 300;
	AC.AR = 7;
	
	void postexecute()
	{
	   cerr << "THRUST: " << THRUST << endl;
	   cerr << "SW: " << SW << endl;
	   cerr << "AR: " << AR << endl;
	   cerr << "TOGW: " << TOGW << endl;
	   cerr << "TOFL: " << TOFL << endl;
	   cerr << "VAPP: " << VAPP << endl;
	   cerr << endl; endl;
	}
}

Paint p
{
	numFrames = 3;

	// vary engine size
	DesignVariable x1
	{
		active = "TRUE"; 
		varName = "AC.THRUST"; 
		minimum = 40000;
		maximum = 80000;
		numSteps = 10;
	};
	
	// vary wing area
	DesignVariable x2
	{ 
		active = "TRUE"; 
		varName = "AC.SW"; 
		minimum = 150;
		maximum = 550;
		numSteps = 10;
	};
	
	// vart aspect ratio
	DesignVariable x3
	{ 
		active = "TRUE"; 
		varName = "AC.AR"; 
		varName = "AC.AR";
		minimum = 5;
		maximum = 8;
		numSteps = 10; 
	};
	
	// Take-off field lenght must be less than 11000 ft
	Limit L1
	{ 
		active = "TRUE"; 
		bigger = "11000";
		smaller = "AC.TOFL"; 
	};
	
	// approach velocity must be less than 135 kts
	Limit L2
	{ 
		active = "TRUE"; 
		bigger = "135";
		smaller = "AC.VAPP"; 
	};

	// define the NPSS assembly to be optimized
	assembly = "AC";
	
	// define the objective function
	real objective()
	{
		return - AC.TOGW;
	}
}

p.verify();
p.run();
